name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  check-code-style:
    name: 'Check code style'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: 'Download ktlint binary'
        run: |
          curl -sSLO https://github.com/pinterest/ktlint/releases/download/0.48.2/ktlint
          chmod +x ktlint

      - name: 'Run ktlint'
        run: ./ktlint --editorconfig=".editorconfig"

  run-tests:
    name: 'Run tests'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Run tests
        run: ./gradlew test

  build-jar:
    name: 'Build jar'
    needs: [ check-code-style, run-tests ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup version variable
        run: |
          echo "VERSION=$(grep "^version=" src/main/resources/version.properties | cut -d= -f2)" >> $GITHUB_ENV

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Build debug jar
        run: ./gradlew shadowJar

      - name: Store jar file
        uses: actions/upload-artifact@v2
        with:
          name: kp-diff-${{env.VERSION}}.jar
          path: ./build/libs/kp-diff-${{env.VERSION}}.jar

  build-native-images:
    name: 'Build native images'
    needs: [ build-jar ]
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: Setup version variable
        run: |
          echo "VERSION=$(grep "^version=" src/main/resources/version.properties | cut -d= -f2)" >> $GITHUB_ENV

      - name: 'Setup Java 11'
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: 'Setup GraalVM Environment'
        uses: DeLaGuardo/setup-graalvm@5.0
        with:
          graalvm: '21.0.0.2'
          java: 'java11'

      - name: 'Install Native Image Plugin'
        run: |
          gu install native-image

      - name: 'Get JAR Artifact'
        uses: actions/download-artifact@v2-preview
        with:
          name: 'kp-diff-${{env.VERSION}}.jar'

      - name: 'Build Image'
        run: |
          native-image --no-server --no-fallback -H:IncludeResources=".*\.properties" --allow-incomplete-classpath -jar kp-diff-${{env.VERSION}}.jar

      - name: 'Publish Image'
        if: success()
        uses: actions/upload-artifact@v2-preview
        with:
          name: 'kp-diff-${{env.VERSION}}-linux'
          path: 'kp-diff-${{env.VERSION}}'

  create-coverage-badge:
    needs: [ build-native-images ]
    name: 'Create coverage badge'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Run tests
        run: ./gradlew test

      - name: Create JaCoCo Badge
        id: jacoco
        uses: cicirello/jacoco-badge-generator@v2
        with:
          jacoco-csv-file: build/reports/coverage/coverage.csv
          badges-directory: .github/badges
          generate-coverage-badge: true

      - name: Log coverage percentage
        run: |
          echo "coverage = ${{steps.jacoco.outputs.coverage}}"

      - name: Commit and push the badge (if it changed)
        uses: EndBug/add-and-commit@v7
        with:
          default_author: github_actions
          message: 'Commit coverage badge'
          add: '*.svg'