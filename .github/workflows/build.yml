name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  check-code-style:
    name: 'Check code style'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download ktlint binary
        run: |
          curl -sSLO https://github.com/pinterest/ktlint/releases/download/0.48.2/ktlint
          chmod +x ktlint

      - name: Run ktlint
        run: ./ktlint --editorconfig=".editorconfig"

  run-detekt:
    name: 'Run detekt'
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Download detekt jar
        run: |
          curl -sSLO https://github.com/detekt/detekt/releases/download/v1.23.6/detekt-cli-1.23.6-all.jar

      - name: Run detekt
        run: java -jar detekt-cli-1.23.6-all.jar --config detekt.yml

  run-tests:
    name: 'Run tests'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Run tests
        run: ./gradlew test

      - name: Upload coverage.csv file
        uses: actions/upload-artifact@v3
        with:
          name: coverage.csv
          path: build/reports/coverage/coverage.csv

  build-jar:
    name: 'Build jar'
    needs: [ check-code-style, run-detekt, run-tests ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup version variable
        run: |
          echo "VERSION=$(grep '^version=' src/main/resources/version.properties | cut -d= -f2)" >> $GITHUB_ENV

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Build debug jar
        run: ./gradlew shadowJar

      - name: Store jar file
        uses: actions/upload-artifact@v3
        with:
          name: kp-diff-${{env.VERSION}}.jar
          path: ./build/libs/kp-diff-${{env.VERSION}}.jar

  build-native-image:
    name: 'Build native image'
    needs: [ build-jar ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup version variable
        run: |
          echo "VERSION=$(grep '^version=' src/main/resources/version.properties | cut -d= -f2)" >> $GITHUB_ENV

      - name: Setup GraalVM Environment
        uses: DeLaGuardo/setup-graalvm@5.0
        with:
          graalvm: '21.0.0.2'
          java: 'java11'

      - name: Get JAR Artifact
        uses: actions/download-artifact@v3
        with:
          name: 'kp-diff-${{env.VERSION}}.jar'

      - name: Build binary file
        run: |
          # Build binary
          gu install native-image
          native-image --no-server --no-fallback -H:IncludeResources=".*\.properties" --enable-all-security-services --allow-incomplete-classpath -jar kp-diff-${{env.VERSION}}.jar

          # Create tar.gz archive
          cp kp-diff-${{env.VERSION}} kp-diff-linux-amd64
          tar -zcvf kp-diff-${{env.VERSION}}-linux-amd64.tar.gz kp-diff-linux-amd64

      - name: Publish binary file
        uses: actions/upload-artifact@v3
        with:
          name: kp-diff-${{env.VERSION}}-linux-amd64
          path: kp-diff-${{env.VERSION}}

      - name: Publish .tar.gz file
        uses: actions/upload-artifact@v3
        with:
          name: kp-diff-${{env.VERSION}}-linux-amd64.tar.gz
          path: kp-diff-${{env.VERSION}}-linux-amd64.tar.gz

  create-deb-package:
    needs: [ build-native-image ]
    name: 'Create deb package'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup version variable
        run: |
          echo "VERSION=$(grep '^version=' src/main/resources/version.properties | cut -d= -f2)" >> $GITHUB_ENV

      - name: Get linux binary
        uses: actions/download-artifact@v3
        with:
          name: kp-diff-${{env.VERSION}}-linux-amd64
          path: artifacts

      - name: Setup package files
        run: |
          mkdir kp-diff_${{env.VERSION}}
          mkdir kp-diff_${{env.VERSION}}/DEBIAN
          mkdir kp-diff_${{env.VERSION}}/usr
          mkdir kp-diff_${{env.VERSION}}/usr/local
          mkdir kp-diff_${{env.VERSION}}/usr/local/bin
          cp artifacts/kp-diff-${{env.VERSION}} kp-diff_${{env.VERSION}}/usr/local/bin/kp-diff
          chmod +x kp-diff_${{env.VERSION}}/usr/local/bin/kp-diff

          PACKAGE_INFO=$(cat << EOF
          Package: kp-diff
          Version: ${{env.VERSION}}
          Section: base
          Priority: optional
          Architecture: amd64
          Depends: libc6 (>= 2.32)
          Maintainer: Aliaksei Ivanouski <alexei.ivanovski@gmail.com>
          Homepage: https://github.com/aivanovski/kp-diff
          Website: https://github.com/aivanovski/kp-diff
          Description: Utility to diff Keepass databases
          EOF
          )
          echo "$PACKAGE_INFO" > kp-diff_${{env.VERSION}}/DEBIAN/control

      - name: Create .deb file
        run: |
          dpkg-deb --build kp-diff_${{env.VERSION}}

      - name: Publish .deb file
        uses: actions/upload-artifact@v3
        with:
          name: kp-diff_${{env.VERSION}}-amd64.deb
          path: kp-diff_${{env.VERSION}}.deb

  create-artifacts-bundle:
    needs: [ create-deb-package ]
    name: 'Create artifacts bundle'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup version variable
        run: |
          echo "VERSION=$(grep '^version=' src/main/resources/version.properties | cut -d= -f2)" >> $GITHUB_ENV

      - name: Get .jar file
        uses: actions/download-artifact@v3
        with:
          name: kp-diff-${{env.VERSION}}.jar
          path: kp-diff-${{env.VERSION}}

      - name: Get .tar.gz file
        uses: actions/download-artifact@v3
        with:
          name: kp-diff-${{env.VERSION}}-linux-amd64.tar.gz
          path: kp-diff-${{env.VERSION}}

      - name: Get .deb file
        uses: actions/download-artifact@v3
        with:
          name: kp-diff_${{env.VERSION}}-amd64.deb
          path: kp-diff-${{env.VERSION}}

      - name: Create zip archive
        run: |
          mv kp-diff-${{env.VERSION}}/kp-diff-${{env.VERSION}}.jar kp-diff-${{env.VERSION}}/kp-diff.jar
          mv kp-diff-${{env.VERSION}}/kp-diff-${{env.VERSION}}-linux-amd64.tar.gz kp-diff-${{env.VERSION}}/kp-diff-linux-amd64.tar.gz
          mv kp-diff-${{env.VERSION}}/kp-diff_${{env.VERSION}}.deb kp-diff-${{env.VERSION}}/kp-diff-linux-amd64.deb

          zip -r kp-diff-${{env.VERSION}}.zip kp-diff-${{env.VERSION}}

      - name: Publish archive with artifacts
        uses: actions/upload-artifact@v3
        with:
          name: kp-diff-${{env.VERSION}}.zip
          path: kp-diff-${{env.VERSION}}.zip

  create-coverage-badge:
    needs: [ create-artifacts-bundle ]
    name: 'Create coverage badge'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get coverage.csv
        uses: actions/download-artifact@v3
        with:
          name: coverage.csv
          path: artifacts

      - name: Create JaCoCo Badge
        id: jacoco
        uses: cicirello/jacoco-badge-generator@v2.8.1
        with:
          jacoco-csv-file: artifacts/coverage.csv
          badges-directory: .github/badges
          generate-coverage-badge: true

      - name: Log coverage percentage
        run: |
          echo "coverage = ${{steps.jacoco.outputs.coverage}}"

      - name: Commit and push the badge (if it changed)
        uses: EndBug/add-and-commit@v7
        with:
          default_author: github_actions
          message: 'Commit coverage badge'
          add: '*.svg'
